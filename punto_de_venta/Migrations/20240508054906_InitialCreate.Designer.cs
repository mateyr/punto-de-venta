// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using punto_de_venta.Context;

#nullable disable

namespace punto_de_venta.Migrations
{
    [DbContext(typeof(PuntoDeVentaContext))]
    [Migration("20240508054906_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("punto_de_venta.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            Name = "Cheese"
                        },
                        new
                        {
                            CategoryId = 2,
                            Name = "Meat"
                        },
                        new
                        {
                            CategoryId = 3,
                            Name = "Fish"
                        },
                        new
                        {
                            CategoryId = 4,
                            Name = "Bread"
                        });
                });

            modelBuilder.Entity("punto_de_venta.Models.Producto", b =>
                {
                    b.Property<int>("ProductoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductoId"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ProductoId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("Nombre")
                        .IsUnique();

                    b.ToTable("Productos");

                    b.HasData(
                        new
                        {
                            ProductoId = 2,
                            Cantidad = 100,
                            CategoryId = 1,
                            Descripcion = "Producto de Prueba",
                            Nombre = "Brie"
                        },
                        new
                        {
                            ProductoId = 3,
                            Cantidad = 100,
                            CategoryId = 1,
                            Descripcion = "Producto de Prueba",
                            Nombre = "Stilton"
                        });
                });

            modelBuilder.Entity("punto_de_venta.Models.Venta", b =>
                {
                    b.Property<int>("VentaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaId"));

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("VentaId");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("punto_de_venta.Models.VentaDetalle", b =>
                {
                    b.Property<int>("VentaDetalleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VentaDetalleID"));

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("ProductooID")
                        .HasColumnType("int");

                    b.Property<int>("VentaID")
                        .HasColumnType("int");

                    b.HasKey("VentaDetalleID");

                    b.HasIndex("ProductoId");

                    b.HasIndex("VentaID");

                    b.ToTable("VentaDetalles");
                });

            modelBuilder.Entity("punto_de_venta.Models.Producto", b =>
                {
                    b.HasOne("punto_de_venta.Models.Category", "Category")
                        .WithMany("Productos")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("punto_de_venta.Models.VentaDetalle", b =>
                {
                    b.HasOne("punto_de_venta.Models.Producto", "Producto")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("punto_de_venta.Models.Venta", "Venta")
                        .WithMany("VentaDetalles")
                        .HasForeignKey("VentaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("punto_de_venta.Models.Category", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("punto_de_venta.Models.Producto", b =>
                {
                    b.Navigation("VentaDetalles");
                });

            modelBuilder.Entity("punto_de_venta.Models.Venta", b =>
                {
                    b.Navigation("VentaDetalles");
                });
#pragma warning restore 612, 618
        }
    }
}
